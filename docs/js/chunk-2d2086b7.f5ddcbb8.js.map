{"version":3,"sources":["webpack:///./src/views/Login.vue","webpack:///./src/views/Login.vue?fd2c","webpack:///./node_modules/quasar/src/components/form/QForm.js","webpack:///./src/views/Login.vue?bcfe"],"names":["class","submit","username","placeholder","autofocus","outlined","counter","maxlength","maxLength","after","round","dense","flat","icon","name","setup","store","getters","settings","maxUsernameLength","value","dispatch","ChangeUsername","router","push","defineComponent","props","Boolean","noErrorFocus","noResetFocus","greedy","onSubmit","Function","emits","slots","emit","vm","getCurrentInstance","rootRef","ref","validateIndex","registeredComponents","validate","shouldFocus","promises","focus","emitEvent","res","i","comp","valid","then","error","Promise","resolve","length","index","all","errors","filter","r","resetValidation","forEach","evt","stopAndPrevent","val","target","reset","nextTick","querySelector","Array","prototype","find","call","querySelectorAll","el","tabIndex","provide","formKey","bindComponent","vmProxy","unbindComponent","indexOf","splice","onMounted","Object","assign","proxy","getValidationComponents","h","onReset","hSlot","default","render","QPage","QForm","QInput","QBtn"],"mappings":"yIAEI,eAAoC,MAAhCA,MAAM,WAAU,eAAW,G,gKADjC,eAiBS,GAjBDA,MAAM,WAAS,C,wBACrB,iBAAoC,CAApC,EACA,eAcS,GAdA,SAAQ,EAAAC,QAAM,C,wBACrB,iBAYU,CAZV,eAYU,G,WAXC,EAAAC,S,qDAAA,EAAAA,SAAQ,IAChB,QAAK,eAAQ,EAAAD,OAAM,WACpBE,YAAY,iBACZC,UAAA,GACAC,SAAA,GACAC,QAAA,GACCC,UAAW,EAAAC,W,CAEKC,MAAK,gBACpB,iBAA8D,CAA9D,eAA8D,GAAvDC,MAAA,GAAMC,MAAA,GAAMC,KAAA,GAAKC,KAAK,eAAgB,QAAO,EAAAZ,Q,4JCT/C,iBAAgB,CAC7Ba,KAAM,OACNC,MAF6B,WAG3B,IAAMb,EAAW,eAAI,IACfM,EAAY,gBAAS,kCAAMQ,EAAA,KAAMC,QAAQC,gBAApB,aAAM,EAAwBC,qBAFtD,SAIYlB,IAJZ,6FAIH,kGACMC,EAASkB,MADf,gCAEUJ,EAAA,KAAMK,SAAS,OAAWC,eAAgBpB,EAASkB,OAF7D,OAGIG,EAAA,KAAOC,KAAK,KAHhB,2CAJG,wBAWH,MAAO,CAAEtB,WAAUM,YAAWP,a,0HCZnBwB,iBAAgB,CAC7BX,KAAM,QAENY,MAAO,CACLtB,UAAWuB,QACXC,aAAcD,QACdE,aAAcF,QACdG,OAAQH,QAERI,SAAUC,UAGZC,MAAO,CAAE,QAAS,qBAAsB,oBAExClB,MAd6B,SActBW,EAdsB,GAcE,IAAfQ,EAAe,EAAfA,MAAOC,EAAQ,EAARA,KACfC,EAAKC,iBACLC,EAAUC,eAAI,MAEhBC,EAAgB,EACdC,EAAuB,GAE7B,SAASC,EAAUC,GACjB,IAAMC,EAAW,GACXC,EAA+B,mBAAhBF,EACjBA,GACuB,IAAvBjB,EAAME,aAEVY,IAMA,IAJA,IAAMM,EAAY,SAACC,EAAKR,GACtBJ,EAAK,gBAAyB,IAARY,EAAe,UAAY,SAAUR,IAT/B,WAYrBS,GACP,IAAMC,EAAOR,EAAsBO,GAC7BE,EAAQD,EAAKP,WAEnB,GAA0B,oBAAfQ,EAAMC,KACfP,EAASpB,KACP0B,EAAMC,MACJ,SAAAD,GAAK,MAAK,CAAEA,QAAOD,WACnB,SAAAG,GAAK,MAAK,CAAEF,OAAO,EAAOD,OAAMG,kBAIjC,IAAc,IAAVF,EAAgB,CACvB,IAAqB,IAAjBxB,EAAMI,OAOR,OANAgB,GAAU,EAAOG,IAEH,IAAVJ,GAAwC,oBAAfI,EAAKJ,OAChCI,EAAKJ,QAGP,GAAOQ,QAAQC,SAAQ,IAGzBV,EAASpB,KAAK,CAAE0B,OAAO,EAAOD,WAvBzBD,EAAI,EAAGA,EAAIP,EAAqBc,OAAQP,IAAK,SAA7CA,GAA6C,2CA2BtD,GAAwB,IAApBJ,EAASW,OAEX,OADAT,GAAU,GACHO,QAAQC,SAAQ,GAGzB,IAAME,EAAQhB,EAEd,OAAOa,QAAQI,IAAIb,GAAUO,MAC3B,SAAAJ,GACE,GAAIS,IAAUhB,EAAe,CAC3B,IAAMkB,EAASX,EAAIY,QAAO,SAAAC,GAAC,OAAgB,IAAZA,EAAEV,SAEjC,GAAsB,IAAlBQ,EAAOH,OAET,OADAT,GAAU,IACH,EALkB,MAQHY,EAAQ,GAAxBR,EARmB,EAQnBA,MAAOD,EARY,EAQZA,KAYf,OAVAH,GAAU,EAAOG,IAGL,IAAVJ,IACa,IAAVK,GACsB,oBAAfD,EAAKJ,OAEfI,EAAKJ,SAGA,MAMf,SAASgB,IACPrB,IAEAC,EAAqBqB,SAAQ,SAAAb,GACK,oBAAzBA,EAAKY,iBAAkCZ,EAAKY,qBAIvD,SAAS5D,EAAQ8D,QACP,IAARA,GAAkBC,eAAeD,GAEjCrB,IAAWS,MAAK,SAAAc,IACF,IAARA,SACqB,IAAnBvC,EAAMK,SACRI,EAAK,SAAU4B,QAEA,IAARA,QAAiC,IAAfA,EAAIG,QAAkD,oBAAtBH,EAAIG,OAAOjE,QACpE8D,EAAIG,OAAOjE,aAMnB,SAASkE,EAAOJ,QACN,IAARA,GAAkBC,eAAeD,GAEjC5B,EAAK,SAELiC,gBAAS,WACPP,KACwB,IAApBnC,EAAMtB,YAA6C,IAAvBsB,EAAMG,cACpCgB,OAKN,SAASA,IACP,IAAMqB,EAAS5B,EAAQlB,MAAMiD,cAAc,kCACtCC,MAAMC,UAAUC,KAAKC,KAAKnC,EAAQlB,MAAMsD,iBAAiB,eAAe,SAAAC,GAAE,OAAIA,EAAGC,UAAY,KAEvF,OAAXV,QAA8B,IAAXA,GAAqBA,EAAOrB,QA8BjD,OA3BAgC,eAAQC,OAAS,CACfC,cADe,SACAC,GACbvC,EAAqBjB,KAAKwD,IAG5BC,gBALe,SAKED,GACf,IAAMxB,EAAQf,EAAqByC,QAAQF,GACvCxB,GAAS,GACXf,EAAqB0C,OAAO3B,EAAO,MAKzC4B,gBAAU,YACY,IAApB1D,EAAMtB,WAAsByC,OAI9BwC,OAAOC,OAAOlD,EAAGmD,MAAO,CACtB7C,WACAmB,kBACA5D,SACAkE,QACAtB,QACA2C,wBAAyB,kBAAM/C,KAG1B,kBAAMgD,eAAE,OAAQ,CACrBzF,MAAO,SACPuC,IAAKD,EACLP,SAAU9B,EACVyF,QAASvB,GACRwB,eAAMzD,EAAM0D,c,6CC7KnB,EAAOC,OAASA,EAED,eAMf,IAAS,EAAQ,aAAc,CAACC,QAAA,KAAMC,QAAMC,SAAA,KAAOC,OAAA","file":"js/chunk-2d2086b7.f5ddcbb8.js","sourcesContent":["<template>\n  <q-page class=\"q-px-md\">\n    <h1 class=\"text-h4\">Авторизация</h1>\n    <q-form @submit=\"submit\">\n      <q-input\n        v-model=\"username\"\n        @keyup.enter=\"submit\"\n        placeholder=\"Как вас зовут?\"\n        autofocus\n        outlined\n        counter\n        :maxlength=\"maxLength\"\n      >\n        <template v-slot:after>\n          <q-btn round dense flat icon=\"fas fa-check\" @click=\"submit\" />\n        </template>\n      </q-input>\n    </q-form>\n  </q-page>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, ref } from 'vue'\nimport { router } from '@/router'\nimport { ActionType, store } from '@/store'\n\nexport default defineComponent({\n  name: 'Room',\n  setup() {\n    const username = ref('')\n    const maxLength = computed(() => store.getters.settings?.maxUsernameLength)\n\n    async function submit() {\n      if (username.value) {\n        await store.dispatch(ActionType.ChangeUsername, username.value)\n        router.push('/')\n      }\n    }\n\n    return { username, maxLength, submit }\n  },\n})\n</script>\n","\nimport { computed, defineComponent, ref } from 'vue'\nimport { router } from '@/router'\nimport { ActionType, store } from '@/store'\n\nexport default defineComponent({\n  name: 'Room',\n  setup() {\n    const username = ref('')\n    const maxLength = computed(() => store.getters.settings?.maxUsernameLength)\n\n    async function submit() {\n      if (username.value) {\n        await store.dispatch(ActionType.ChangeUsername, username.value)\n        router.push('/')\n      }\n    }\n\n    return { username, maxLength, submit }\n  },\n})\n","import { h, defineComponent, ref, onMounted, getCurrentInstance, nextTick, provide } from 'vue'\n\nimport { stopAndPrevent } from '../../utils/event.js'\nimport { hSlot } from '../../utils/private/render.js'\nimport { formKey } from '../../utils/private/symbols.js'\n\nexport default defineComponent({\n  name: 'QForm',\n\n  props: {\n    autofocus: Boolean,\n    noErrorFocus: Boolean,\n    noResetFocus: Boolean,\n    greedy: Boolean,\n\n    onSubmit: Function\n  },\n\n  emits: [ 'reset', 'validation-success', 'validation-error' ],\n\n  setup (props, { slots, emit }) {\n    const vm = getCurrentInstance()\n    const rootRef = ref(null)\n\n    let validateIndex = 0\n    const registeredComponents = []\n\n    function validate (shouldFocus) {\n      const promises = []\n      const focus = typeof shouldFocus === 'boolean'\n        ? shouldFocus\n        : props.noErrorFocus !== true\n\n      validateIndex++\n\n      const emitEvent = (res, ref) => {\n        emit('validation-' + (res === true ? 'success' : 'error'), ref)\n      }\n\n      for (let i = 0; i < registeredComponents.length; i++) {\n        const comp = registeredComponents[ i ]\n        const valid = comp.validate()\n\n        if (typeof valid.then === 'function') {\n          promises.push(\n            valid.then(\n              valid => ({ valid, comp }),\n              error => ({ valid: false, comp, error })\n            )\n          )\n        }\n        else if (valid !== true) {\n          if (props.greedy === false) {\n            emitEvent(false, comp)\n\n            if (focus === true && typeof comp.focus === 'function') {\n              comp.focus()\n            }\n\n            return Promise.resolve(false)\n          }\n\n          promises.push({ valid: false, comp })\n        }\n      }\n\n      if (promises.length === 0) {\n        emitEvent(true)\n        return Promise.resolve(true)\n      }\n\n      const index = validateIndex\n\n      return Promise.all(promises).then(\n        res => {\n          if (index === validateIndex) {\n            const errors = res.filter(r => r.valid !== true)\n\n            if (errors.length === 0) {\n              emitEvent(true)\n              return true\n            }\n\n            const { valid, comp } = errors[ 0 ]\n\n            emitEvent(false, comp)\n\n            if (\n              focus === true\n              && valid !== true\n              && typeof comp.focus === 'function'\n            ) {\n              comp.focus()\n            }\n\n            return false\n          }\n        }\n      )\n    }\n\n    function resetValidation () {\n      validateIndex++\n\n      registeredComponents.forEach(comp => {\n        typeof comp.resetValidation === 'function' && comp.resetValidation()\n      })\n    }\n\n    function submit (evt) {\n      evt !== void 0 && stopAndPrevent(evt)\n\n      validate().then(val => {\n        if (val === true) {\n          if (props.onSubmit !== void 0) {\n            emit('submit', evt)\n          }\n          else if (evt !== void 0 && evt.target !== void 0 && typeof evt.target.submit === 'function') {\n            evt.target.submit()\n          }\n        }\n      })\n    }\n\n    function reset (evt) {\n      evt !== void 0 && stopAndPrevent(evt)\n\n      emit('reset')\n\n      nextTick(() => { // allow userland to reset values before\n        resetValidation()\n        if (props.autofocus === true && props.noResetFocus !== true) {\n          focus()\n        }\n      })\n    }\n\n    function focus () {\n      const target = rootRef.value.querySelector('[autofocus], [data-autofocus]')\n        || Array.prototype.find.call(rootRef.value.querySelectorAll('[tabindex]'), el => el.tabIndex > -1)\n\n      target !== null && target !== void 0 && target.focus()\n    }\n\n    provide(formKey, {\n      bindComponent (vmProxy) {\n        registeredComponents.push(vmProxy)\n      },\n\n      unbindComponent (vmProxy) {\n        const index = registeredComponents.indexOf(vmProxy)\n        if (index > -1) {\n          registeredComponents.splice(index, 1)\n        }\n      }\n    })\n\n    onMounted(() => {\n      props.autofocus === true && focus()\n    })\n\n    // expose public methods\n    Object.assign(vm.proxy, {\n      validate,\n      resetValidation,\n      submit,\n      reset,\n      focus,\n      getValidationComponents: () => registeredComponents\n    })\n\n    return () => h('form', {\n      class: 'q-form',\n      ref: rootRef,\n      onSubmit: submit,\n      onReset: reset\n    }, hSlot(slots.default))\n  }\n})\n","import { render } from \"./Login.vue?vue&type=template&id=cd526ed8\"\nimport script from \"./Login.vue?vue&type=script&lang=ts\"\nexport * from \"./Login.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QPage from 'quasar/src/components/page/QPage.js';\nimport QForm from 'quasar/src/components/form/QForm.js';\nimport QInput from 'quasar/src/components/input/QInput.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport qInstall from \"../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QPage,QForm,QInput,QBtn});\n"],"sourceRoot":""}