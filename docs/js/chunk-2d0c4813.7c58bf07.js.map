{"version":3,"sources":["webpack:///./src/views/Room.vue","webpack:///./src/components/InputPannel.vue","webpack:///./src/components/InputPannel.vue?9088","webpack:///./src/components/InputPannel.vue?63c7","webpack:///./src/views/Room.vue?fc85","webpack:///./node_modules/quasar/src/components/chat/QChatMessage.js","webpack:///./src/views/Room.vue?21d3"],"names":["class","src","isDataReady","ref","onScroll","history","message","index","key","name","sender","username","text","sent","stamp","Date","created","toLocaleString","bg-color","scrollToBottom","placeholder","autofocus","sendMessage","borderless","dense","maxlength","maxLength","after","round","flat","icon","emits","setup","_","emit","store","getters","settings","maxMessageLength","currentRoom","input","focusInput","value","focus","dispatch","SendMessage","roomName","render","QInput","QBtn","components","InputPannel","router","currentRoute","params","rooms","messageCount","length","scroller","isScrollerFixed","scrollMax","scrollHeight","clientHeight","scrollTop","force","FetchHistory","setTimeout","commit","SetCurrentRoom","undefined","SetHistory","room","find","el","defineComponent","props","Boolean","label","String","bgColor","textColor","avatar","Array","size","labelHtml","nameHtml","textHtml","stampHtml","slots","op","computed","textClass","messageClass","containerClass","sizeClass","domProps","msg","getText","withStamp","node","h","map","getMessage","content","hUniqueSlot","default","push","container","child","QPage","QChatMessage"],"mappings":"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","file":"js/chunk-2d0c4813.7c58bf07.js","sourcesContent":["<template>\n  <q-page>\n    <div v-if=\"!isDataReady\" class=\"preloader\">\n      <img\n        src=\"https://i.gifer.com/origin/b4/b4d657e7ef262b88eb5f7ac021edda87.gif\"\n      />\n    </div>\n    <div class=\"column chat\">\n      <div class=\"col chat-history\">\n        <div class=\"chat-scroller\" ref=\"scroller\" @scroll=\"onScroll\">\n          <div v-if=\"history\" class=\"col q-pa-md\">\n            <q-chat-message\n              v-for=\"(message, index) in history\"\n              :key=\"`message-${index}`\"\n              :name=\"message.sender.username\"\n              :text=\"[message.text]\"\n              :sent=\"message.sender.username === username\"\n              :stamp=\"new Date(message.created).toLocaleString('ru')\"\n              :bg-color=\"\n                message.sender.username === username ? 'green-3' : 'indigo-2'\n              \"\n            />\n          </div>\n        </div>\n      </div>\n      <div class=\"col chat-input\">\n        <InputPannel @message=\"scrollToBottom(true)\" />\n      </div>\n    </div>\n  </q-page>\n</template>\n\n<script lang=\"ts\">\nimport {\n  computed,\n  defineComponent,\n  nextTick,\n  onBeforeUnmount,\n  onMounted,\n  ref,\n  watch,\n  watchEffect,\n} from 'vue'\nimport InputPannel from '@/components/InputPannel.vue'\nimport { router } from '@/router'\nimport { ActionType, MutationType, store } from '@/store'\n\nexport default defineComponent({\n  name: 'Room',\n  components: { InputPannel },\n  setup() {\n    const roomName = router.currentRoute.value.params.name as string\n\n    const username = computed(() => store.getters.username)\n    const rooms = computed(() => store.getters.rooms)\n    const history = computed(() => store.getters.history)\n    const messageCount = computed(() => history.value?.length)\n\n    const scroller = ref<HTMLInputElement | null>(null)\n    const isScrollerFixed = ref(true)\n    const isDataReady = ref(false)\n\n    onMounted(async () => {\n      await store.dispatch(ActionType.FetchHistory, roomName)\n\n      // Sorry😐\n      setTimeout(() => {\n        scrollToBottom(true)\n        isDataReady.value = true\n      }, 500)\n    })\n\n    onBeforeUnmount(() => {\n      store.commit(MutationType.SetCurrentRoom, undefined)\n      store.commit(MutationType.SetHistory, undefined)\n    })\n\n    watch(\n      () => messageCount.value,\n      async () => {\n        await nextTick()\n        scrollToBottom()\n      },\n    )\n\n    watchEffect(() => {\n      const room = rooms.value?.find(el => el.name === roomName)\n      if (room) store.commit(MutationType.SetCurrentRoom, room)\n    })\n\n    function onScroll() {\n      if (scroller.value) {\n        const scrollMax =\n          scroller.value.scrollHeight - scroller.value.clientHeight\n        isScrollerFixed.value = scroller.value.scrollTop === scrollMax\n      }\n    }\n\n    function scrollToBottom(force = false) {\n      if (scroller.value && (force || isScrollerFixed.value)) {\n        scroller.value.scrollTop = scroller.value.scrollHeight\n      }\n    }\n\n    return {\n      username,\n      history,\n      scroller,\n      isDataReady,\n      onScroll,\n      scrollToBottom,\n    }\n  },\n})\n</script>\n","<template>\n  <section class=\"input-panel\">\n    <div class=\"message-panel\">\n      <q-input\n        class=\"message-input bg-primary q-py-xs q-px-md\"\n        v-model=\"message\"\n        placeholder=\"Ваше сообщение\"\n        autofocus\n        @keyup.enter=\"sendMessage()\"\n        borderless\n        dense\n        ref=\"input\"\n        :maxlength=\"maxLength\"\n      >\n        <template v-slot:after>\n          <q-btn\n            round\n            dense\n            flat\n            icon=\"fas fa-paper-plane\"\n            @click=\"sendMessage()\"\n          />\n        </template>\n      </q-input>\n    </div>\n  </section>\n</template>\n\n<script lang=\"ts\">\nimport { computed, defineComponent, ref } from 'vue'\nimport { ActionType, store } from '@/store'\n\nexport default defineComponent({\n  name: 'InputPanel',\n  emits: ['message'],\n  setup(_, { emit }) {\n    const maxLength = computed(() => store.getters.settings?.maxMessageLength)\n    const currentRoom = computed(() => store.getters.currentRoom)\n    const history = computed(() => store.getters.history)\n    const message = ref<string | null>(null)\n    const input = ref<HTMLInputElement | null>(null)\n\n    function focusInput() {\n      input.value?.focus()\n    }\n\n    function sendMessage() {\n      if (message.value && currentRoom.value) {\n        store.dispatch(ActionType.SendMessage, {\n          roomName: currentRoom.value.name,\n          text: message.value,\n        })\n        emit('message')\n        message.value = null\n        focusInput()\n      }\n    }\n\n    return { maxLength, history, message, input, sendMessage }\n  },\n})\n</script>\n","\nimport { computed, defineComponent, ref } from 'vue'\nimport { ActionType, store } from '@/store'\n\nexport default defineComponent({\n  name: 'InputPanel',\n  emits: ['message'],\n  setup(_, { emit }) {\n    const maxLength = computed(() => store.getters.settings?.maxMessageLength)\n    const currentRoom = computed(() => store.getters.currentRoom)\n    const history = computed(() => store.getters.history)\n    const message = ref<string | null>(null)\n    const input = ref<HTMLInputElement | null>(null)\n\n    function focusInput() {\n      input.value?.focus()\n    }\n\n    function sendMessage() {\n      if (message.value && currentRoom.value) {\n        store.dispatch(ActionType.SendMessage, {\n          roomName: currentRoom.value.name,\n          text: message.value,\n        })\n        emit('message')\n        message.value = null\n        focusInput()\n      }\n    }\n\n    return { maxLength, history, message, input, sendMessage }\n  },\n})\n","import { render } from \"./InputPannel.vue?vue&type=template&id=893ac284\"\nimport script from \"./InputPannel.vue?vue&type=script&lang=ts\"\nexport * from \"./InputPannel.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QInput from 'quasar/src/components/input/QInput.js';\nimport QBtn from 'quasar/src/components/btn/QBtn.js';\nimport qInstall from \"../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QInput,QBtn});\n","\nimport {\n  computed,\n  defineComponent,\n  nextTick,\n  onBeforeUnmount,\n  onMounted,\n  ref,\n  watch,\n  watchEffect,\n} from 'vue'\nimport InputPannel from '@/components/InputPannel.vue'\nimport { router } from '@/router'\nimport { ActionType, MutationType, store } from '@/store'\n\nexport default defineComponent({\n  name: 'Room',\n  components: { InputPannel },\n  setup() {\n    const roomName = router.currentRoute.value.params.name as string\n\n    const username = computed(() => store.getters.username)\n    const rooms = computed(() => store.getters.rooms)\n    const history = computed(() => store.getters.history)\n    const messageCount = computed(() => history.value?.length)\n\n    const scroller = ref<HTMLInputElement | null>(null)\n    const isScrollerFixed = ref(true)\n    const isDataReady = ref(false)\n\n    onMounted(async () => {\n      await store.dispatch(ActionType.FetchHistory, roomName)\n\n      // Sorry😐\n      setTimeout(() => {\n        scrollToBottom(true)\n        isDataReady.value = true\n      }, 500)\n    })\n\n    onBeforeUnmount(() => {\n      store.commit(MutationType.SetCurrentRoom, undefined)\n      store.commit(MutationType.SetHistory, undefined)\n    })\n\n    watch(\n      () => messageCount.value,\n      async () => {\n        await nextTick()\n        scrollToBottom()\n      },\n    )\n\n    watchEffect(() => {\n      const room = rooms.value?.find(el => el.name === roomName)\n      if (room) store.commit(MutationType.SetCurrentRoom, room)\n    })\n\n    function onScroll() {\n      if (scroller.value) {\n        const scrollMax =\n          scroller.value.scrollHeight - scroller.value.clientHeight\n        isScrollerFixed.value = scroller.value.scrollTop === scrollMax\n      }\n    }\n\n    function scrollToBottom(force = false) {\n      if (scroller.value && (force || isScrollerFixed.value)) {\n        scroller.value.scrollTop = scroller.value.scrollHeight\n      }\n    }\n\n    return {\n      username,\n      history,\n      scroller,\n      isDataReady,\n      onScroll,\n      scrollToBottom,\n    }\n  },\n})\n","import { h, defineComponent, computed } from 'vue'\n\nimport { hUniqueSlot } from '../../utils/private/render.js'\n\nexport default defineComponent({\n  name: 'QChatMessage',\n\n  props: {\n    sent: Boolean,\n    label: String,\n    bgColor: String,\n    textColor: String,\n    name: String,\n    avatar: String,\n    text: Array,\n    stamp: String,\n    size: String,\n    labelHtml: Boolean,\n    nameHtml: Boolean,\n    textHtml: Boolean,\n    stampHtml: Boolean\n  },\n\n  setup (props, { slots }) {\n    const op = computed(() => (props.sent === true ? 'sent' : 'received'))\n\n    const textClass = computed(() =>\n      `q-message-text-content q-message-text-content--${ op.value }`\n      + (props.textColor !== void 0 ? ` text-${ props.textColor }` : '')\n    )\n\n    const messageClass = computed(() =>\n      `q-message-text q-message-text--${ op.value }`\n      + (props.bgColor !== void 0 ? ` text-${ props.bgColor }` : '')\n    )\n\n    const containerClass = computed(() =>\n      'q-message-container row items-end no-wrap'\n      + (props.sent === true ? ' reverse' : '')\n    )\n\n    const sizeClass = computed(() => (props.size !== void 0 ? `col-${ props.size }` : ''))\n\n    const domProps = computed(() => ({\n      msg: props.textHtml === true ? 'innerHTML' : 'textContent',\n      stamp: props.stampHtml === true ? 'innerHTML' : 'textContent',\n      name: props.nameHtml === true ? 'innerHTML' : 'textContent',\n      label: props.labelHtml === true ? 'innerHTML' : 'textContent'\n    }))\n\n    function getText () {\n      const withStamp = props.stamp\n        ? node => [\n            node,\n            h('div', {\n              class: 'q-message-stamp',\n              [ domProps.value.stamp ]: props.stamp\n            })\n          ]\n        : node => [ node ]\n\n      return props.text.map((msg, index) => h('div', {\n        key: index,\n        class: messageClass.value\n      }, [\n        h(\n          'div',\n          { class: textClass.value },\n          withStamp(\n            h('div', { [ domProps.value.msg ]: msg })\n          )\n        )\n      ]))\n    }\n\n    function getMessage () {\n      const content = hUniqueSlot(slots.default, [])\n\n      props.stamp !== void 0 && content.push(\n        h('div', {\n          class: 'q-message-stamp',\n          [ domProps.value.stamp ]: props.stamp\n        })\n      )\n\n      return h('div', { class: messageClass.value }, [\n        h('div', {\n          class: 'q-message-text-content ' + textClass.value\n        }, content)\n      ])\n    }\n\n    return () => {\n      const container = []\n\n      if (slots.avatar !== void 0) {\n        container.push(slots.avatar())\n      }\n      else if (props.avatar !== void 0) {\n        container.push(\n          h('img', {\n            class: `q-message-avatar q-message-avatar--${ op.value }`,\n            src: props.avatar,\n            'aria-hidden': 'true'\n          })\n        )\n      }\n\n      const msg = []\n\n      props.name !== void 0 && msg.push(\n        h('div', {\n          class: `q-message-name q-message-name--${ op.value }`,\n          [ domProps.value.name ]: props.name\n        })\n      )\n\n      props.text !== void 0 && msg.push(getText())\n\n      slots.default !== void 0 && msg.push(getMessage())\n\n      container.push(\n        h('div', { class: sizeClass.value }, msg)\n      )\n\n      const child = []\n\n      props.label && child.push(\n        h('div', {\n          class: 'q-message-label text-center',\n          [ domProps.value.label ]: props.label\n        })\n      )\n\n      child.push(\n        h('div', { class: containerClass.value }, container)\n      )\n\n      return h('div', {\n        class: `q-message q-message-${ op.value }`\n      }, child)\n    }\n  }\n})\n","import { render } from \"./Room.vue?vue&type=template&id=6e33db8a\"\nimport script from \"./Room.vue?vue&type=script&lang=ts\"\nexport * from \"./Room.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script\nimport QPage from 'quasar/src/components/page/QPage.js';\nimport QChatMessage from 'quasar/src/components/chat/QChatMessage.js';\nimport qInstall from \"../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QPage,QChatMessage});\n"],"sourceRoot":""}